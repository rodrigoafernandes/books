# Generation of Kubernetes YAML is still under development!
#
# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-3.2.3
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2021-09-04T13:49:57Z"
  labels:
    app: books-infra
  name: books-infra
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - exec $ORACLE_BASE/$RUN_FILE
    env:
    - name: PATH
      value: /opt/oracle/product/18c/dbhomeXE/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: container
      value: podman
    - name: ORACLE_BASE
      value: /opt/oracle
    - name: CHECK_SPACE_FILE
      value: checkSpace.sh
    - name: ORACLE_SID
      value: XE
    - name: RUN_FILE
      value: runOracle.sh
    - name: PWD_FILE
      value: setPassword.sh
    - name: CONF_FILE
      value: oracle-xe-18c.conf
    - name: INSTALL_DIR
      value: /install
    - name: INSTALL_FILE_1
      value: https://download.oracle.com/otn-pub/otn_software/db-express/oracle-database-xe-18c-1.0-1.x86_64.rpm
    - name: CHECK_DB_FILE
      value: checkDBStatus.sh
    - name: ORACLE_DOCKER_INSTALL
      value: "true"
    - name: ORACLE_HOME
      value: /opt/oracle/product/18c/dbhomeXE
    - name: ORACLE_PWD
      value: admin123
    - name: ORACLE_CHARACTERSET
      value: UTF8
    image: container-registry.oracle.com/database/express:18.4.0-xe
    name: oracledb
    ports:
    - containerPort: 8080
      hostPort: 8080
      protocol: TCP
    - containerPort: 1521
      hostPort: 1521
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
    workingDir: /
  dnsConfig: {}
  restartPolicy: Always
status: {}

